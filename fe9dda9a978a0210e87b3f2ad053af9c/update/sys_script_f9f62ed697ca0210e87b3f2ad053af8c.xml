<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_893820_gemininow_gemininow</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Rc-SolicitaçãoGeminiOutbound</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
function executeRule(current, previous /*null when async*/) {
  // Verifique o nome correto da API na documentação do Gemini
  var r = new sn_ws.RESTMessageV2('GeminiNow','Gemini');
  r.setStringParameterNoEscape('prompt', current.question);

  try {
    var response = r.execute();
    var responseBody = response.getBody();
    gs.log("Resposta do Gemini: " + responseBody);  // Evite registrar dados sensíveis

    var httpStatus = response.getStatusCode();
    if (httpStatus === 200) {
      var responseObjt = JSON.parse(responseBody);
      var test = responseObjt.candidates[0].content.parts[0].text;
      current.response = test;
    } else {
      // Tratar erro (por exemplo, registrar erro e definir valor padrão)
      gs.error("Erro na solicitação ao Gemini: " + httpStatus);
      current.response = "Erro ao processar a solicitação.";
    }
  } catch (error) {
    // Tratar erros inesperados
    gs.error("Erro inesperado: " + error.message);
    current.response = "Erro ao processar a solicitação.";
  }
}


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-11 02:30:43</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f9f62ed697ca0210e87b3f2ad053af8c</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Rc-SolicitaçãoGeminiOutbound</sys_name>
        <sys_overrides/>
        <sys_package display_value="GeminiNow" source="x_893820_gemininow">fe9dda9a978a0210e87b3f2ad053af9c</sys_package>
        <sys_policy/>
        <sys_scope display_value="GeminiNow">fe9dda9a978a0210e87b3f2ad053af9c</sys_scope>
        <sys_update_name>sys_script_f9f62ed697ca0210e87b3f2ad053af8c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-11 02:42:41</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f9f62ed697ca0210e87b3f2ad053af8c"/>
</record_update>
